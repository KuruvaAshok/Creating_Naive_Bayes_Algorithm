# -*- coding: utf-8 -*-
"""Creating_Naive_Bayes_Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I4L-raLw7a9-VFHYwQ2FQWzT8ttcMwTN
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
df=pd.read_csv('/content/drive/MyDrive/cleaned_titanic.csv')

df

class naive:
    def __init__(self,x,y):
        self.x=x
        self.y=y
    def probability(self,col_name,col_value):
        gt=pd.concat([self.x,self.y],axis=1)
        dt=gt[gt[col_name]==col_value]
        yes=len(dt[dt[dt.columns[-1]]=='Yes'])
        no=len(dt[dt[dt.columns[-1]]=='No'])
        l=yes/(no+yes)
        l1=no/(no+yes)
        return l,l1
    def predict(self,pred):
        self.pred=pred
        yes=self.y.value_counts()['Yes']
        no=self.y.value_counts()['No']
        tot_yes=yes/(yes+no)
        tot_no=no/(yes+no)
        for i in range(len(pred)):
          y=self.probability(self.x.columns[i],pred[i])
          tot_yes=y[0]
          tot_no=y[1]
        if(tot_yes>tot_no):
          return "Survived"
        else:
          return "Not Survived"


obj=naive(df.iloc[:,0:3],df['Survived'])
print(obj.predict(['female','Second','C']))

